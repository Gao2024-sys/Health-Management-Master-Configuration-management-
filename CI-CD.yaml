name: CI/CD Pipeline for HMMS  
  
on:  
  push:  
    branches:  
      - main  # 触发条件：当代码被推送到main分支时  
  
jobs:  
  build-and-test:  
    runs-on: ubuntu-latest  # 使用GitHub托管的Ubuntu虚拟机  
  
    steps:  
      - name: Checkout Repository  # 检出代码  
        uses: actions/checkout@v3  
  
      - name: Setup Environment  # 设置构建环境（根据HMMS的依赖项进行调整）  
        # 例如，如果HMMS是Node.js项目，则可以使用actions/setup-node@v3动作  
        uses: actions/setup-node@v3  
        with:  
          node-version: '16'  # 指定Node.js版本  
  
      - name: Install Dependencies  # 安装依赖项  
        run: npm install  # 或使用HMMS的依赖管理工具执行相应的安装命令  
  
      - name: Build HMMS  # 构建HMMS  
        run: npm run build  # 或使用HMMS的构建命令  
  
      - name: Run Tests  # 运行测试  
        run: npm test  # 或使用HMMS的测试框架执行相应的测试命令  
  
  deploy:  
    needs: build-and-test  # 表示此作业依赖于前面的build-and-test作业  
    runs-on: ubuntu-latest  
  
    steps:  
      - name: Checkout Repository  
        uses: actions/checkout@v3  
  
      - name: Deploy to Production  # 部署到生产环境（根据实际情况调整）  
        # 例如，使用SSH部署到远程服务器  
        uses: easingthemes/ssh-deploy@v2.1.5  
        with:  
          ssh-private-key: ${{secrets.SSH_PRIVATE_KEY}}  # 从GitHub Secrets中读取SSH私钥  
          remote-host: example.com  # 远程服务器地址  
          remote-user: deploy_user  # 远程服务器用户名  
          source-directory: ./dist  # 要部署的源代码目录  
          target-directory: /var/www/html/hmms  # 远程服务器上的目标目录